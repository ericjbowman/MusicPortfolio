[{"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/index.js":"1","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/reportWebVitals.js":"2","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/App.js":"3","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/ProdLib.js":"4","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Home.js":"5","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Track.js":"6"},{"size":511,"mtime":1667370248128,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1667370248128,"results":"9","hashOfConfig":"8"},{"size":717,"mtime":1667370248112,"results":"10","hashOfConfig":"8"},{"size":3247,"mtime":1667370248115,"results":"11","hashOfConfig":"8"},{"size":10946,"mtime":1672379835599,"results":"12","hashOfConfig":"8"},{"size":7342,"mtime":1667370637575,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rzotji",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/index.js",[],["29","30"],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/reportWebVitals.js",[],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/App.js",["31","32","33"],"import '../styles/App.css'\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport Home from './Home.js'\nimport ProdLib from './ProdLib.js'\n\nfunction App() {\n  console.log('deloyed at 4:04')\n  return (\n    <div className='app-container'>\n      <HashRouter>\n        <Switch>\n          <Route\n            exact path='/alibiapp'\n          >\n            <ProdLib />\n          </Route>\n          <Route\n            exact path='/demos'\n          >\n            <ProdLib />\n          </Route>\n          <Route\n            path='/'\n          >\n            <Home />\n          </Route>\n        </Switch>\n      </HashRouter>\n  </div>\n  )\n}\n\nexport default App\n","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/ProdLib.js",[],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Home.js",["34","35","36","37","38","39","40"],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Track.js",["41","42","43","44"],"import React, {useState, useEffect, useRef} from 'react'\nimport {gsap} from \"gsap\";\nimport play from '../images/play_filled.png'\nimport pause from '../images/pause_filled.png'\nimport '../styles/Track.css'\n\nexport default function Track(props) {\n  const [isPlaying, _setIsPlaying] = useState(false)\n  const [waveformWidth, _setWaveformWidth] = useState(0)\n  const [audioLength, setAudioLength] = useState(0)\n  const audioRef = useRef()\n  const waveformWidthRef = useRef()\n  const tween1Ref = useRef()\n  const tween2Ref = useRef()\n  const tween3Ref = useRef()\n  const tween4Ref = useRef()\n  const trackCanvasContainerRef = useRef()\n  const isPlayingRef = useRef()\n  function setIsPlaying(data) {\n    isPlayingRef.current = data\n    _setIsPlaying(data)\n  }\n  // const [tween1, setTween1] = useState(null)\n  // const [tween2, setTween2] = useState(null)\n  // const [timeline, setTimeline] = useState(gsap.timeline({repeat: 0}))\n  // const [playPosition, setPlayPosition] = useState(0)\n  const canvasRef = useRef()\n  const playedPortionRef = useRef()\n  const unplayedPortionRef = useRef()\n  function onClickPlayPause() {\n    console.log(waveformWidth)\n    const audio = document.getElementById(props.id)\n    if (audio) {\n      if (isPlaying) {\n        setIsPlaying(false)\n      } else {\n        setIsPlaying(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    console.log('audio ref', audioRef)\n    if (audioRef.current) {\n      console.log('audio ref current')\n      const length = audioRef.current.duration\n      console.log('length', length)\n      setAudioLength(length)\n    }\n  }, [audioRef])\n\n  function skipTo(time) {\n    const audio = document.getElementById(props.id)\n    audio.currentTime = time\n  }\n\n  function onMouseUp(event, canvas) {\n    const audio = document.getElementById(props.id)\n    if (audio.currentTime === 0) {\n      setIsPlaying(true)\n    } else {\n      let rect = canvas.getBoundingClientRect()\n      let x = event.clientX - rect.left\n      console.log(\"Coordinate x: \" + x)\n      const container = document.getElementById('track-canvas-container')\n      const containerWidth = container.clientWidth\n      const ratioOfCanvas = x / containerWidth\n      const skipTime = ratioOfCanvas * audio.duration\n      console.log('skip time', skipTime)\n      skipTo(skipTime)\n      const playedPortion = playedPortionRef.current\n      const unplayedPortion = unplayedPortionRef.current\n      gsap.killTweensOf(playedPortion);\n      tween1Ref.current = gsap.set(playedPortion, {width: `${ratioOfCanvas * 100}%`, duration: 0, ease: 'none'})\n      tween3Ref.current = gsap.set(unplayedPortion, {width: `${100 - (ratioOfCanvas * 100)}%`, duration: 0, ease: 'none'})\n      console.log('is playing?', isPlaying)\n      if (isPlayingRef.current) {\n        movePlayHead()\n      }\n    }\n  }\n\n  function resetPlayHead() {\n    const audio = document.getElementById(props.id)\n    audio.currentTime = 0\n    setIsPlaying(false)\n    // timeline.clear()\n    const playedPortion = playedPortionRef.current\n    const unplayedPortion = unplayedPortionRef.current\n    tween1Ref.current = gsap.to(playedPortion, {width: '0%', duration: 0, ease: 'none'})\n    tween3Ref.current = gsap.to(unplayedPortion, {width: '100%', duration: 0, ease: 'none'})\n  }\n\n  function setWaveformWidth() {\n    const newWaveFormWidth =\n      trackCanvasContainerRef && trackCanvasContainerRef.current ?\n        trackCanvasContainerRef.current.clientWidth : 0\n    _setWaveformWidth(newWaveFormWidth)\n    waveformWidthRef.current = newWaveFormWidth\n  }\n\n  useEffect(() => {\n    gsap.ticker.lagSmoothing(false)\n    console.log('canvas ref', canvasRef, canvasRef.current)\n    window.addEventListener('resize', setWaveformWidth)\n    setWaveformWidth()\n    // setTimeout(() => {\n    //   setWaveformWidth()\n    // }, 500)\n    // canvasRef => {}.current.addEventListener('onmouseup', (e) => {\n    //   onMouseUp(e, canvasRef.current)\n    // })\n    canvasRef.current.onmouseup = (e) => {\n      onMouseUp(e, canvasRef.current)\n    }\n    const audio = document.getElementById(props.id)\n    audio.addEventListener('ended', resetPlayHead)\n  }, [])\n\n  useEffect(() => {\n    console.log('setting wave width')\n    setWaveformWidth()\n  }, [waveformWidthRef.current])\n\n  function movePlayHead() {\n    const audio = document.getElementById(props.id)\n    const playedPortion = playedPortionRef.current\n    const unplayedPortion = unplayedPortionRef.current\n    const duration = audio.duration - audio.currentTime\n    tween2Ref.current = gsap.to(playedPortion, {width: '100%', duration: duration, ease: 'none'})\n    tween4Ref.current = gsap.to(unplayedPortion, {width: '0%', duration: duration, ease: 'none'})\n  }\n\n  useEffect(() => {\n    const audio = document.getElementById(props.id)\n    console.log('current position: ', audio.currentTime)\n    if (isPlaying) {\n      movePlayHead()\n      audio.play()\n    } else {\n      audio.pause()\n      if (tween2Ref.current) {\n        tween2Ref.current.pause()\n      }\n      if (tween4Ref.current) {\n        tween4Ref.current.pause()\n      }\n    }\n  }, [isPlaying])\n  \n  return (\n    <div className=\"track\">\n      <div className=\"track-left\">\n        <img src={props.image} alt='' />\n      </div>\n      <div className=\"track-right\">\n        <div className=\"track-top\">\n          <audio\n            id={props.id}\n            src={props.source}\n            ref={audioRef}\n          />\n          <button\n            className=\"play-pause\"\n            onClickCapture={onClickPlayPause}\n          >\n            <img\n              className='play-pause-img'\n              alt={isPlaying ? 'pause' : 'play'}\n              src={isPlaying ? pause : play}\n              // style={isPlaying ? {\n              //   filter: `invert(72%) sepia(20%) saturate(4956%) hue-rotate(154deg) brightness(99%) contrast(100%)`\n              // } : {}}\n            />\n          </button>\n          <div className=\"track-info\">\n            <span className=\"track-title\">{props.name}</span>\n            <div className='track-meta-data'>\n              <span>{props.genre}</span>\n              <span>{props.keyCenter}</span>\n              <span>{props.tempo + 'bpm'}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"track-middle\">\n          <div\n            id=\"track-canvas-container\"\n            ref={trackCanvasContainerRef}\n          >\n            <img\n              className=\"unplayed-wave-img\"\n              src={props.waveImg} alt=''\n              // style={{\n              //   width: `${waveformWidthRef.current || 0}px`\n              // }}\n            />\n            <div\n              ref={playedPortionRef}\n              className='track-canvas-played-portion'\n            />\n            <div\n              ref={unplayedPortionRef}\n              className='track-canvas-unplayed-portion'\n            />\n            <canvas\n              className=\"track-canvas\"\n              id={props.id + '-canvas'}\n              height=\"20\"\n              ref={canvasRef}\n            />\n          </div>\n        </div>\n        <div className=\"track-bottom\">\n          <div className=\"tags\">\n            {props.tags.map((tag, i) => {\n              return (\n                <span key={props.id + '-tag-' + i}>\n                  {'#' + tag}\n                </span>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":16,"nodeType":"51","messageId":"52","endLine":2,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":2,"column":26,"nodeType":"51","messageId":"52","endLine":2,"endColumn":35},{"ruleId":"49","severity":1,"message":"54","line":2,"column":37,"nodeType":"51","messageId":"52","endLine":2,"endColumn":45},{"ruleId":"49","severity":1,"message":"50","line":4,"column":16,"nodeType":"51","messageId":"52","endLine":4,"endColumn":24},{"ruleId":"49","severity":1,"message":"55","line":12,"column":21,"nodeType":"51","messageId":"52","endLine":12,"endColumn":33},{"ruleId":"56","severity":1,"message":"57","line":57,"column":6,"nodeType":"58","endLine":57,"endColumn":17,"suggestions":"59"},{"ruleId":"49","severity":1,"message":"60","line":61,"column":9,"nodeType":"51","messageId":"52","endLine":61,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":134,"column":11,"nodeType":"63","endLine":134,"endColumn":218},{"ruleId":"64","severity":1,"message":"65","line":206,"column":13,"nodeType":"63","endLine":206,"endColumn":46},{"ruleId":"66","severity":1,"message":"67","line":212,"column":11,"nodeType":"63","endLine":212,"endColumn":66},{"ruleId":"49","severity":1,"message":"68","line":10,"column":10,"nodeType":"51","messageId":"52","endLine":10,"endColumn":21},{"ruleId":"56","severity":1,"message":"69","line":118,"column":6,"nodeType":"58","endLine":118,"endColumn":8,"suggestions":"70"},{"ruleId":"56","severity":1,"message":"71","line":123,"column":6,"nodeType":"58","endLine":123,"endColumn":32,"suggestions":"72"},{"ruleId":"56","severity":1,"message":"73","line":149,"column":6,"nodeType":"58","endLine":149,"endColumn":17,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'setIsClicked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hamburgerRef' and 'menu'. Either include them or remove the dependency array. You can also do a functional update 'setMenu(m => ...)' if you only need 'menu' in the 'setMenu' call.","ArrayExpression",["77"],"'containerRef' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'audioLength' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onMouseUp', 'props.id', and 'resetPlayHead'. Either include them or remove the dependency array.",["78"],"React Hook useEffect has an unnecessary dependency: 'waveformWidthRef.current'. Either exclude it or remove the dependency array. Mutable values like 'waveformWidthRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["79"],"React Hook useEffect has missing dependencies: 'movePlayHead' and 'props.id'. Either include them or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [hamburgerRef, isClicked, menu]",{"range":"89","text":"90"},"Update the dependencies array to be: [onMouseUp, props.id, resetPlayHead]",{"range":"91","text":"92"},"Update the dependencies array to be: []",{"range":"93","text":"94"},"Update the dependencies array to be: [isPlaying, movePlayHead, props.id]",{"range":"95","text":"96"},[2542,2553],"[hamburgerRef, isClicked, menu]",[4094,4096],"[onMouseUp, props.id, resetPlayHead]",[4185,4211],"[]",[5037,5048],"[isPlaying, movePlayHead, props.id]"]