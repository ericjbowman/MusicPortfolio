[{"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/index.js":"1","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/reportWebVitals.js":"2","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/App.js":"3","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/ProdLib.js":"4","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Home.js":"5","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Track.js":"6"},{"size":511,"mtime":1667368284726,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1667368284727,"results":"9","hashOfConfig":"8"},{"size":717,"mtime":1667368348351,"results":"10","hashOfConfig":"8"},{"size":3247,"mtime":1667369024903,"results":"11","hashOfConfig":"8"},{"size":10621,"mtime":1667368284705,"results":"12","hashOfConfig":"8"},{"size":7306,"mtime":1667368284707,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rzotji",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/index.js",[],["30","31"],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/reportWebVitals.js",[],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/App.js",["32","33","34"],"import '../styles/App.css'\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport Home from './Home.js'\nimport ProdLib from './ProdLib.js'\n\nfunction App() {\n  console.log('deloyed at 4:04')\n  return (\n    <div className='app-container'>\n      <HashRouter>\n        <Switch>\n          <Route\n            exact path='/alibiapp'\n          >\n            <ProdLib />\n          </Route>\n          <Route\n            exact path='/demos'\n          >\n            <ProdLib />\n          </Route>\n          <Route\n            path='/'\n          >\n            <Home />\n          </Route>\n        </Switch>\n      </HashRouter>\n  </div>\n  )\n}\n\nexport default App\n","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/ProdLib.js",[],"/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Home.js",["35","36","37","38","39","40","41"],"import '../styles/App.css'\nimport eric from '../images/Eric.png'\nimport profPic from '../images/Profpic2.jpg'\nimport React, {Fragment, useEffect, useState} from 'react'\n\nfunction Home() {\n  const portfolioRef = React.createRef()\n  const contactRef = React.createRef()\n  const aboutRef = React.createRef()\n  const headerRef = React.createRef()\n  const [menu, setMenu] = useState(false)\n  const [isClicked, setIsClicked] = useState(false)\n  const [areLinks, setAreLinks] = useState(false)\n  const hamburgerRef = React.createRef()\n  const aboutMe = (\n    <div className='about-me-div'>\n      <p>\n        I'm a composer and software engineer from Kalamazoo, MI with a Doctorate in Music from the University of Miami. My diverse musical experiences enable me to create bespoke scores that help deliver a creator's specific vision to their audience. I compose in a wide variety of styles and aim to produce memorable music that makes an emotional impact on its listeners.\n      </p>\n      <p>\n        I’m looking for freelance opportunities to work with filmmakers and developers who want interactive or linear music for their project. I’m familiar with game audio middleware such as Fmod, and can provide music that responds to gameplay parameters. If you’re interested, please send me an email. I’m happy to create a short demo track for your project to see if my music is a good fit.\n      </p>\n    </div>\n  )\n\n  const onClickLink = (link) => {\n    setMenu(false)\n    if (link === 'portfolio') {\n      const yOffset = 90\n      const y = portfolioRef.current.getBoundingClientRect().top + window.pageYOffset - yOffset\n      window.scrollTo({top: y, behavior: 'smooth'});\n    } else if (link === 'about') {\n      const yOffset = 90\n      const y = aboutRef.current.getBoundingClientRect().top + window.pageYOffset - yOffset\n      window.scrollTo({top: y, behavior: 'smooth'});\n    } else if (link === 'contact') {\n      contactRef.current.scrollIntoView({behavior: 'smooth'})\n    } else if (link === 'header') {\n      headerRef.current.scrollIntoView({behavior: 'smooth'})\n    }\n  }\n\n  const middleLineClass = () => {\n    // return isClicked ? (menu ? 'path' : 'path2') : 'default'\n    return menu ? 'path' : 'path2'\n  }\n\n  useEffect(() => {\n    if (isClicked && hamburgerRef) {\n      setMenu(!menu)\n    }\n  }, [isClicked])\n\n  console.log('middleLineClass', middleLineClass())\n\n  const containerRef = React.createRef()\n\n  const onClickHamburger = () => {\n    setAreLinks(true)\n    setMenu(!menu)\n  }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <div className='logo'>\n          <img src={eric} alt='Eric' />\n          {/* <pre>Eric Bowman Music</pre> */}\n        </div>\n        <div className='links'>\n          <span onClick={() => onClickLink('about')}>ABOUT</span>\n          <span onClick={() => onClickLink('portfolio')}>PORTFOLIO</span>\n          <span onClick={() => onClickLink('contact')}>CONTACT</span>\n        </div>\n        {areLinks &&\n          <div className={menu ? 'hamburger-links slideDown' : 'hamburger-links slideUp'}>\n            <span onClick={() => onClickLink('about')}>ABOUT</span>\n            <span onClick={() => onClickLink('portfolio')}>PORTFOLIO</span>\n            <span onClick={() => onClickLink('contact')}>CONTACT</span>\n          </div>\n        }\n        <div class={menu ? 'container active' : \"container\"} onClick={onClickHamburger}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"150\" viewBox=\"0 0 200 200\">\n            <g stroke-width=\"6.5\" stroke-linecap=\"round\">\n              <path\n                d=\"M72 82.286h28.75\"\n                fill=\"#009100\"\n                fill-rule=\"evenodd\"\n                stroke=\"#fff\"\n              />\n              <path\n                d=\"M100.75 103.714l72.482-.143c.043 39.398-32.284 71.434-72.16 71.434-39.878 0-72.204-32.036-72.204-71.554\"\n                fill=\"none\"\n                stroke=\"#fff\"\n              />\n              <path\n                d=\"M72 125.143h28.75\"\n                fill=\"#009100\"\n                fill-rule=\"evenodd\"\n                stroke=\"#fff\"\n              />\n              <path\n                d=\"M100.75 103.714l-71.908-.143c.026-39.638 32.352-71.674 72.23-71.674 39.876 0 72.203 32.036 72.203 71.554\"\n                fill=\"none\"\n                stroke=\"#fff\"\n              />\n              <path\n                d=\"M100.75 82.286h28.75\"\n                fill=\"#009100\"\n                fill-rule=\"evenodd\"\n                stroke=\"#fff\"\n              />\n              <path\n                d=\"M100.75 125.143h28.75\"\n                fill=\"#009100\"\n                fill-rule=\"evenodd\"\n                stroke=\"#fff\"\n              />\n            </g>\n          </svg>\n        </div>\n      </nav>\n      <header onClick={() => onClickLink('header')} ref={headerRef}>\n        <div className=\"demo-reel-container\">\n          <iframe className='demo-reel' src=\"https://www.youtube.com/embed/ET2VVDcmv0A\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        </div>\n      </header>\n      <main>\n      <section ref={portfolioRef} className='portfolio'>\n          <h3>PORTFOLIO</h3>\n          <div className='portfolio-div'>\n            <div className='video-container'>\n              <p>Like and Follow</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/jKkMItqnqQ0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Short Film Rescore</p>\n            </div>\n            <div className='video-container'>\n              <p>The Witch Blade</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/5SPii3MJ4Ao\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Fantasy Action Gameplay</p>\n            </div>\n            <div className='video-container'>\n              <p>Sumo Cars</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/oBamG2vGd7I\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>EDM Title Music</p>\n            </div>\n            <div className='video-container'>\n              <p>Die! This World</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/f_BXcahpL7c\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Quirky VR Gameplay</p>\n            </div>\n            <div className='video-container'>\n              <p>Temple of Boom</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/tcOtMENPQg4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Ambient Title Music</p>\n            </div>\n            <div className='video-container'>\n              <p>Paintings Please</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/h3Se4dZv5K0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Baroque Harpsichord Music</p>\n            </div>\n            <div className='video-container'>\n              <p>Spring</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/NxQBMqcD2Q8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Short Film Rescore</p>\n            </div>\n            <div className='video-container'>\n              <p>Mass Effect Andromeda</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/LfZEdAKCAM0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Scifi Cutscene Rescore</p>\n            </div>\n            <div className='video-container'>\n              <p>Megaman 11</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/cpwQKn7ibaU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Scifi Action Rescore</p>\n            </div>\n            <div className='video-container'>\n              <p>Ghost Runner</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/VmiCRaUXejM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Scifi Gameplay Rescore</p>\n            </div>\n            <div className='video-container'>\n              <p>Neon Abyss</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/zR4u8kMhS3A\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Boss Fight Rescore</p>\n            </div>\n            <div className='video-container'>\n              <p>Fez</p>\n              <iframe className='portfolio-vid' src=\"https://www.youtube.com/embed/wyocXE-WYug\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <p>Chiptune Gameplay Rescore</p>\n            </div>\n          </div>\n      </section>\n        <section ref={aboutRef} className='about'>\n          <h3>ABOUT</h3>\n          <div className='about-me-container'>\n            <img src={profPic} alt='photo' />\n            {aboutMe}\n          </div>\n        </section>\n        <section ref={contactRef} className='contact'>\n          <h3>CONTACT</h3>\n          <a href='mailto:ericjbowman@gmail.com' target='_blank'>ericjbowman@gmail.com</a>\n        </section>\n      </main>\n    </div>\n  )\n}\n\nexport default Home","/Users/ericjbowman/Documents/GitHub/musicportfolio/src/components/Track.js",["42","43","44","45"],"import React, {useState, useEffect, useRef} from 'react'\nimport {gsap} from \"gsap\";\nimport play from '../images/play_filled.png'\nimport pause from '../images/pause_filled.png'\nimport '../styles/Track.css'\n\nexport default function Track(props) {\n  const [isPlaying, _setIsPlaying] = useState(false)\n  const [waveformWidth, _setWaveformWidth] = useState(0)\n  const [audioLength, setAudioLength] = useState(0)\n  const audioRef = useRef()\n  const waveformWidthRef = useRef()\n  const tween1Ref = useRef()\n  const tween2Ref = useRef()\n  const tween3Ref = useRef()\n  const tween4Ref = useRef()\n  const trackCanvasContainerRef = useRef()\n  const isPlayingRef = useRef()\n  function setIsPlaying(data) {\n    isPlayingRef.current = data\n    _setIsPlaying(data)\n  }\n  // const [tween1, setTween1] = useState(null)\n  // const [tween2, setTween2] = useState(null)\n  // const [timeline, setTimeline] = useState(gsap.timeline({repeat: 0}))\n  // const [playPosition, setPlayPosition] = useState(0)\n  const canvasRef = useRef()\n  const playedPortionRef = useRef()\n  const unplayedPortionRef = useRef()\n  function onClickPlayPause() {\n    console.log(waveformWidth)\n    const audio = document.getElementById(props.id)\n    if (audio) {\n      if (isPlaying) {\n        setIsPlaying(false)\n      } else {\n        setIsPlaying(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    console.log('audio ref', audioRef)\n    if (audioRef.current) {\n      console.log('audio ref current')\n      const length = audioRef.current.duration\n      console.log('length', length)\n      setAudioLength(length)\n    }\n  }, [audioRef])\n\n  function skipTo(time) {\n    const audio = document.getElementById(props.id)\n    audio.currentTime = time\n  }\n\n  function onMouseUp(event, canvas) {\n    const audio = document.getElementById(props.id)\n    if (audio.currentTime === 0) {\n      setIsPlaying(true)\n    } else {\n      let rect = canvas.getBoundingClientRect()\n      let x = event.clientX - rect.left\n      console.log(\"Coordinate x: \" + x)\n      const container = document.getElementById('track-canvas-container')\n      const containerWidth = container.clientWidth\n      const ratioOfCanvas = x / containerWidth\n      const skipTime = ratioOfCanvas * audio.duration\n      console.log('skip time', skipTime)\n      skipTo(skipTime)\n      const playedPortion = playedPortionRef.current\n      const unplayedPortion = unplayedPortionRef.current\n      gsap.killTweensOf(playedPortion);\n      tween1Ref.current = gsap.set(playedPortion, {width: `${ratioOfCanvas * 100}%`, duration: 0, ease: 'none'})\n      tween3Ref.current = gsap.set(unplayedPortion, {width: `${100 - (ratioOfCanvas * 100)}%`, duration: 0, ease: 'none'})\n      console.log('is playing?', isPlaying)\n      if (isPlayingRef.current) {\n        movePlayHead()\n      }\n    }\n  }\n\n  function resetPlayHead() {\n    const audio = document.getElementById(props.id)\n    audio.currentTime = 0\n    setIsPlaying(false)\n    // timeline.clear()\n    const playedPortion = playedPortionRef.current\n    const unplayedPortion = unplayedPortionRef.current\n    tween1Ref.current = gsap.to(playedPortion, {width: '0%', duration: 0, ease: 'none'})\n    tween3Ref.current = gsap.to(unplayedPortion, {width: '100%', duration: 0, ease: 'none'})\n  }\n\n  function setWaveformWidth() {\n    const newWaveFormWidth =\n      trackCanvasContainerRef && trackCanvasContainerRef.current ?\n        trackCanvasContainerRef.current.clientWidth : 0\n    _setWaveformWidth(newWaveFormWidth)\n    waveformWidthRef.current = newWaveFormWidth\n  }\n\n  useEffect(() => {\n    console.log('canvas ref', canvasRef, canvasRef.current)\n    window.addEventListener('resize', setWaveformWidth)\n    setWaveformWidth()\n    // setTimeout(() => {\n    //   setWaveformWidth()\n    // }, 500)\n    // canvasRef => {}.current.addEventListener('onmouseup', (e) => {\n    //   onMouseUp(e, canvasRef.current)\n    // })\n    canvasRef.current.onmouseup = (e) => {\n      onMouseUp(e, canvasRef.current)\n    }\n    const audio = document.getElementById(props.id)\n    audio.addEventListener('ended', resetPlayHead)\n  }, [])\n\n  useEffect(() => {\n    console.log('setting wave width')\n    setWaveformWidth()\n  }, [waveformWidthRef.current])\n\n  function movePlayHead() {\n    const audio = document.getElementById(props.id)\n    const playedPortion = playedPortionRef.current\n    const unplayedPortion = unplayedPortionRef.current\n    const duration = audio.duration - audio.currentTime\n    tween2Ref.current = gsap.to(playedPortion, {width: '100%', duration: duration, ease: 'none'})\n    tween4Ref.current = gsap.to(unplayedPortion, {width: '0%', duration: duration, ease: 'none'})\n  }\n\n  useEffect(() => {\n    const audio = document.getElementById(props.id)\n    console.log('current position: ', audio.currentTime)\n    if (isPlaying) {\n      movePlayHead()\n      audio.play()\n    } else {\n      audio.pause()\n      if (tween2Ref.current) {\n        tween2Ref.current.pause()\n      }\n      if (tween4Ref.current) {\n        tween4Ref.current.pause()\n      }\n    }\n  }, [isPlaying])\n  \n  return (\n    <div className=\"track\">\n      <div className=\"track-left\">\n        <img src={props.image} alt='' />\n      </div>\n      <div className=\"track-right\">\n        <div className=\"track-top\">\n          <audio\n            id={props.id}\n            src={props.source}\n            ref={audioRef}\n          />\n          <button\n            className=\"play-pause\"\n            onClickCapture={onClickPlayPause}\n          >\n            <img\n              className='play-pause-img'\n              alt={isPlaying ? 'pause' : 'play'}\n              src={isPlaying ? pause : play}\n              // style={isPlaying ? {\n              //   filter: `invert(72%) sepia(20%) saturate(4956%) hue-rotate(154deg) brightness(99%) contrast(100%)`\n              // } : {}}\n            />\n          </button>\n          <div className=\"track-info\">\n            <span className=\"track-title\">{props.name}</span>\n            <div className='track-meta-data'>\n              <span>{props.genre}</span>\n              <span>{props.keyCenter}</span>\n              <span>{props.tempo + 'bpm'}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"track-middle\">\n          <div\n            id=\"track-canvas-container\"\n            ref={trackCanvasContainerRef}\n          >\n            <img\n              className=\"unplayed-wave-img\"\n              src={props.waveImg} alt=''\n              // style={{\n              //   width: `${waveformWidthRef.current || 0}px`\n              // }}\n            />\n            <div\n              ref={playedPortionRef}\n              className='track-canvas-played-portion'\n            />\n            <div\n              ref={unplayedPortionRef}\n              className='track-canvas-unplayed-portion'\n            />\n            <canvas\n              className=\"track-canvas\"\n              id={props.id + '-canvas'}\n              height=\"20\"\n              ref={canvasRef}\n            />\n          </div>\n        </div>\n        <div className=\"track-bottom\">\n          <div className=\"tags\">\n            {props.tags.map((tag, i) => {\n              return (\n                <span key={props.id + '-tag-' + i}>\n                  {'#' + tag}\n                </span>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":16,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"54","line":2,"column":26,"nodeType":"52","messageId":"53","endLine":2,"endColumn":35},{"ruleId":"50","severity":1,"message":"55","line":2,"column":37,"nodeType":"52","messageId":"53","endLine":2,"endColumn":45},{"ruleId":"50","severity":1,"message":"51","line":4,"column":16,"nodeType":"52","messageId":"53","endLine":4,"endColumn":24},{"ruleId":"50","severity":1,"message":"56","line":12,"column":21,"nodeType":"52","messageId":"53","endLine":12,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":52,"column":6,"nodeType":"59","endLine":52,"endColumn":17,"suggestions":"60"},{"ruleId":"50","severity":1,"message":"61","line":56,"column":9,"nodeType":"52","messageId":"53","endLine":56,"endColumn":21},{"ruleId":"62","severity":1,"message":"63","line":125,"column":11,"nodeType":"64","endLine":125,"endColumn":218},{"ruleId":"65","severity":1,"message":"66","line":197,"column":13,"nodeType":"64","endLine":197,"endColumn":46},{"ruleId":"67","severity":1,"message":"68","line":203,"column":11,"nodeType":"64","endLine":203,"endColumn":66},{"ruleId":"50","severity":1,"message":"69","line":10,"column":10,"nodeType":"52","messageId":"53","endLine":10,"endColumn":21},{"ruleId":"57","severity":1,"message":"70","line":117,"column":6,"nodeType":"59","endLine":117,"endColumn":8,"suggestions":"71"},{"ruleId":"57","severity":1,"message":"72","line":122,"column":6,"nodeType":"59","endLine":122,"endColumn":32,"suggestions":"73"},{"ruleId":"57","severity":1,"message":"74","line":148,"column":6,"nodeType":"59","endLine":148,"endColumn":17,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'setIsClicked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hamburgerRef' and 'menu'. Either include them or remove the dependency array. You can also do a functional update 'setMenu(m => ...)' if you only need 'menu' in the 'setMenu' call.","ArrayExpression",["78"],"'containerRef' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'audioLength' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onMouseUp', 'props.id', and 'resetPlayHead'. Either include them or remove the dependency array.",["79"],"React Hook useEffect has an unnecessary dependency: 'waveformWidthRef.current'. Either exclude it or remove the dependency array. Mutable values like 'waveformWidthRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["80"],"React Hook useEffect has missing dependencies: 'movePlayHead' and 'props.id'. Either include them or remove the dependency array.",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [hamburgerRef, isClicked, menu]",{"range":"90","text":"91"},"Update the dependencies array to be: [onMouseUp, props.id, resetPlayHead]",{"range":"92","text":"93"},"Update the dependencies array to be: []",{"range":"94","text":"95"},"Update the dependencies array to be: [isPlaying, movePlayHead, props.id]",{"range":"96","text":"97"},[2306,2317],"[hamburgerRef, isClicked, menu]",[4058,4060],"[onMouseUp, props.id, resetPlayHead]",[4149,4175],"[]",[5001,5012],"[isPlaying, movePlayHead, props.id]"]